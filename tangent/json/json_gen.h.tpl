#pragma once
// This file was generated by json_gen.py

#include "tangent/json/json.h"
#include "tangent/json/type_registry.h"

{% if ctx.header_includes -%}
{% for filename in sorted(ctx.header_includes) -%}
#include "{{filename}}"
{% endfor %}
{% endif -%}

{%- if ctx.namespaces -%}
{% for ns in ctx.namespaces -%}
namespace {{ns}} {
{% endfor %}
{% endif -%}

{%- for qname, fields in sorted(ctx.specs) -%}
int parsefields_{{escapename(qname)}}( //
    const json::stream::Registry& registry, const re2::StringPiece& key,
    json::LexerParser* stream, {{qname}}* out);
int dumpfields_{{escapename(qname)}}( //
    const {{qname}}& value, json::stream::Dumper* dumper);
{%- if not loop.last %}

{% endif -%}
{%- endfor %}

// Register the type specific parsers/dumpers
int register_types(json::stream::Registry*);

{% for ns in ctx.namespaces[::-1] -%}
}  // namespace {{ns}}
{% endfor %}
